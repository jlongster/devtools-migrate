# HG changeset patch
# User J. Ryan Stinnett <jryans@gmail.com>
# Date 1439504821 18000
#      Thu Aug 13 17:27:01 2015 -0500
# Node ID 23ba12221cda1a58f402f64753a4628c46ab530f
# Parent  4a73ebc2763aa0bdbaef65bcb14b2c0b15b5abed
Bug 912121 - Remove dead loader paths. r=ochameau

diff --git a/devtools/client/framework/gDevTools.jsm b/devtools/client/framework/gDevTools.jsm
--- a/devtools/client/framework/gDevTools.jsm
+++ b/devtools/client/framework/gDevTools.jsm
@@ -1320,9 +1320,9 @@ gDevTools.on("tool-unregistered", functi
 });
 
 gDevTools.on("toolbox-ready", gDevToolsBrowser._updateMenuCheckbox);
 gDevTools.on("toolbox-destroyed", gDevToolsBrowser._updateMenuCheckbox);
 
 Services.obs.addObserver(gDevToolsBrowser.destroy, "quit-application", false);
 
 // Load the browser devtools main module as the loader's main module.
-loader.main("main");
+loader.main("devtools/client/main");
diff --git a/devtools/shared/Loader.jsm b/devtools/shared/Loader.jsm
--- a/devtools/shared/Loader.jsm
+++ b/devtools/shared/Loader.jsm
@@ -1,11 +1,12 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+/* globals NetUtil, FileUtils, OS */
 
 "use strict";
 
 /**
  * Manages the addon-sdk loader instance used to load the developer tools.
  */
 
 let { Constructor: CC, classes: Cc, interfaces: Ci, utils: Cu } = Components;
@@ -72,33 +73,19 @@ BuiltinProvider.prototype = {
   load: function() {
     this.loader = new Loader.Loader({
       id: "fx-devtools",
       modules: loaderModules,
       paths: {
         // When you add a line to this mapping, don't forget to make a
         // corresponding addition to the SrcdirProvider mapping below as well.
         "": "resource://gre/modules/commonjs/",
-        "main": "resource:///modules/devtools/main.js",
-        "definitions": "resource:///modules/devtools/definitions.js",
-        "devtools": "resource:///modules/devtools",
-        "devtools/toolkit": "resource://gre/modules/devtools",
-        "devtools/server": "resource://gre/modules/devtools/server",
-        "devtools/toolkit/webconsole": "resource://gre/modules/devtools/toolkit/webconsole",
-        "devtools/app-actor-front": "resource://gre/modules/devtools/app-actor-front.js",
-        "devtools/styleinspector/css-logic": "resource://gre/modules/devtools/styleinspector/css-logic",
-        "devtools/css-color": "resource://gre/modules/devtools/css-color",
-        "devtools/output-parser": "resource://gre/modules/devtools/output-parser",
-        "devtools/client": "resource://gre/modules/devtools/client",
-        "devtools/pretty-fast": "resource://gre/modules/devtools/pretty-fast.js",
-        "devtools/jsbeautify": "resource://gre/modules/devtools/jsbeautify/beautify.js",
-        "devtools/async-utils": "resource://gre/modules/devtools/async-utils",
-        "devtools/content-observer": "resource://gre/modules/devtools/content-observer",
+        "devtools": "resource://gre/modules/devtools",
+        "devtools/client": "resource:///modules/devtools/client",
         "gcli": "resource://gre/modules/devtools/gcli",
-        "projecteditor": "resource:///modules/devtools/projecteditor",
         "promise": "resource://gre/modules/Promise-backend.js",
         "acorn": "resource://gre/modules/devtools/acorn",
         "acorn/util/walk": "resource://gre/modules/devtools/acorn/walk.js",
         "tern": "resource://gre/modules/devtools/tern",
         "source-map": "resource://gre/modules/devtools/sourcemap/source-map.js",
 
         // Allow access to xpcshell test items from the loader.
         "xpcshell-test": "resource://test"
@@ -127,63 +114,32 @@ SrcdirProvider.prototype = {
     let file = new FileUtils.File(path);
     return Services.io.newFileURI(file).spec;
   },
 
   load: function() {
     let srcdir = Services.prefs.getComplexValue("devtools.loader.srcdir",
                                                 Ci.nsISupportsString);
     srcdir = OS.Path.normalize(srcdir.data.trim());
-    let devtoolsDir = OS.Path.join(srcdir, "browser", "devtools");
-    let toolkitDir = OS.Path.join(srcdir, "toolkit", "devtools");
+    let devtoolsDir = OS.Path.join(srcdir, "devtools");
+    let devtoolsURI = this.fileURI(devtoolsDir);
     let modulesDir = OS.Path.join(srcdir, "toolkit", "modules");
-    let mainURI = this.fileURI(OS.Path.join(devtoolsDir, "main.js"));
-    let definitionsURI = this.fileURI(OS.Path.join(devtoolsDir, "definitions.js"));
-    let devtoolsURI = this.fileURI(devtoolsDir);
-    let toolkitURI = this.fileURI(toolkitDir);
-    let serverURI = this.fileURI(OS.Path.join(toolkitDir, "server"));
-    let webconsoleURI = this.fileURI(OS.Path.join(toolkitDir, "webconsole"));
-    let appActorURI = this.fileURI(OS.Path.join(toolkitDir, "apps", "app-actor-front.js"));
-    let cssLogicURI = this.fileURI(OS.Path.join(toolkitDir, "styleinspector", "css-logic"));
-    let cssColorURI = this.fileURI(OS.Path.join(toolkitDir, "css-color"));
-    let outputParserURI = this.fileURI(OS.Path.join(toolkitDir, "output-parser"));
-    let clientURI = this.fileURI(OS.Path.join(toolkitDir, "client"));
-    let prettyFastURI = this.fileURI(OS.Path.join(toolkitDir, "pretty-fast.js"));
-    let jsBeautifyURI = this.fileURI(OS.Path.join(toolkitDir, "jsbeautify", "beautify.js"));
-    let asyncUtilsURI = this.fileURI(OS.Path.join(toolkitDir, "async-utils.js"));
-    let contentObserverURI = this.fileURI(OS.Path.join(toolkitDir), "content-observer.js");
     let gcliURI = this.fileURI(OS.Path.join(toolkitDir, "gcli", "source", "lib", "gcli"));
-    let projecteditorURI = this.fileURI(OS.Path.join(devtoolsDir, "projecteditor"));
     let promiseURI = this.fileURI(OS.Path.join(modulesDir, "Promise-backend.js"));
     let acornURI = this.fileURI(OS.Path.join(toolkitDir, "acorn"));
     let acornWalkURI = OS.Path.join(acornURI, "walk.js");
     let ternURI = OS.Path.join(toolkitDir, "tern");
     let sourceMapURI = this.fileURI(OS.Path.join(toolkitDir, "sourcemap", "source-map.js"));
     this.loader = new Loader.Loader({
       id: "fx-devtools",
       modules: loaderModules,
       paths: {
         "": "resource://gre/modules/commonjs/",
-        "main": mainURI,
-        "definitions": definitionsURI,
         "devtools": devtoolsURI,
-        "devtools/toolkit": toolkitURI,
-        "devtools/server": serverURI,
-        "devtools/toolkit/webconsole": webconsoleURI,
-        "devtools/app-actor-front": appActorURI,
-        "devtools/styleinspector/css-logic": cssLogicURI,
-        "devtools/css-color": cssColorURI,
-        "devtools/output-parser": outputParserURI,
-        "devtools/client": clientURI,
-        "devtools/pretty-fast": prettyFastURI,
-        "devtools/jsbeautify": jsBeautifyURI,
-        "devtools/async-utils": asyncUtilsURI,
-        "devtools/content-observer": contentObserverURI,
         "gcli": gcliURI,
-        "projecteditor": projecteditorURI,
         "promise": promiseURI,
         "acorn": acornURI,
         "acorn/util/walk": acornWalkURI,
         "tern": ternURI,
         "source-map": sourceMapURI,
       },
       globals: this.globals,
       invisibleToDebugger: this.invisibleToDebugger,

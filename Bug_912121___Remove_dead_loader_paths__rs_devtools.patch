# HG changeset patch
# User J. Ryan Stinnett <jryans@gmail.com>
# Date 1441770247 18000
#      Tue Sep 08 22:44:07 2015 -0500
# Node ID 6c8be3d72415759898b570769a1c9f3e28b63d58
# Parent  8a5f7380f5ce42a03bd4a59638c8451d308ffdb2
Bug 912121 - Remove dead loader paths. rs=devtools

diff --git a/devtools/client/framework/gDevTools.jsm b/devtools/client/framework/gDevTools.jsm
--- a/devtools/client/framework/gDevTools.jsm
+++ b/devtools/client/framework/gDevTools.jsm
@@ -1322,9 +1322,9 @@ gDevTools.on("tool-unregistered", functi
 });
 
 gDevTools.on("toolbox-ready", gDevToolsBrowser._updateMenuCheckbox);
 gDevTools.on("toolbox-destroyed", gDevToolsBrowser._updateMenuCheckbox);
 
 Services.obs.addObserver(gDevToolsBrowser.destroy, "quit-application", false);
 
 // Load the browser devtools main module as the loader's main module.
-loader.main("main");
+loader.main("devtools/client/main");
diff --git a/devtools/shared/Loader.jsm b/devtools/shared/Loader.jsm
--- a/devtools/shared/Loader.jsm
+++ b/devtools/shared/Loader.jsm
@@ -1,11 +1,12 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+/* globals NetUtil, FileUtils, OS */
 
 "use strict";
 
 /**
  * Manages the addon-sdk loader instance used to load the developer tools.
  */
 
 let { Constructor: CC, classes: Cc, interfaces: Ci, utils: Cu } = Components;
@@ -62,136 +63,117 @@ XPCOMUtils.defineLazyGetter(loaderModule
     return Cu.Sandbox(this, {wantGlobalProperties:["indexedDB"]}).indexedDB;
   } catch(e) {
     return {};
   }
 });
 
 let sharedGlobalBlacklist = ["sdk/indexed-db"];
 
-// Used when the tools should be loaded from the Firefox package itself (the default)
+/**
+ * Used when the tools should be loaded from the Firefox package itself.
+ * This is the default case.
+ */
 function BuiltinProvider() {}
 BuiltinProvider.prototype = {
   load: function() {
     this.loader = new Loader.Loader({
       id: "fx-devtools",
       modules: loaderModules,
       paths: {
         // When you add a line to this mapping, don't forget to make a
         // corresponding addition to the SrcdirProvider mapping below as well.
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "": "resource://gre/modules/commonjs/",
-        "main": "resource:///modules/devtools/main.js",
-        "definitions": "resource:///modules/devtools/definitions.js",
-        "devtools": "resource:///modules/devtools",
-        "devtools/toolkit": "resource://gre/modules/devtools",
-        "devtools/server": "resource://gre/modules/devtools/server",
-        "devtools/toolkit/webconsole": "resource://gre/modules/devtools/toolkit/webconsole",
-        "devtools/app-actor-front": "resource://gre/modules/devtools/app-actor-front.js",
-        "devtools/styleinspector/css-logic": "resource://gre/modules/devtools/styleinspector/css-logic",
-        "devtools/css-color": "resource://gre/modules/devtools/css-color",
-        "devtools/output-parser": "resource://gre/modules/devtools/output-parser",
-        "devtools/client": "resource://gre/modules/devtools/client",
-        "devtools/pretty-fast": "resource://gre/modules/devtools/pretty-fast.js",
-        "devtools/jsbeautify": "resource://gre/modules/devtools/jsbeautify/beautify.js",
-        "devtools/async-utils": "resource://gre/modules/devtools/async-utils",
-        "devtools/content-observer": "resource://gre/modules/devtools/content-observer",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+        "devtools": "resource://gre/modules/devtools",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+        "devtools/client": "resource:///modules/devtools/client",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "gcli": "resource://gre/modules/devtools/gcli",
-        "projecteditor": "resource:///modules/devtools/projecteditor",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "promise": "resource://gre/modules/Promise-backend.js",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn": "resource://gre/modules/devtools/acorn",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn/util/walk": "resource://gre/modules/devtools/acorn/walk.js",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "tern": "resource://gre/modules/devtools/tern",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "source-map": "resource://gre/modules/devtools/sourcemap/source-map.js",
-
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         // Allow access to xpcshell test items from the loader.
         "xpcshell-test": "resource://test"
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
       },
       globals: this.globals,
       invisibleToDebugger: this.invisibleToDebugger,
       sharedGlobal: true,
       sharedGlobalBlacklist: sharedGlobalBlacklist
     });
 
     return promise.resolve(undefined);
   },
 
   unload: function(reason) {
     Loader.unload(this.loader, reason);
     delete this.loader;
   },
 };
 
-// Used when the tools should be loaded from a mozilla-central checkout.  In addition
-// to different paths, it needs to write chrome.manifest files to override chrome urls
-// from the builtin tools.
+/**
+ * Used when the tools should be loaded from a mozilla-central checkout.  In
+ * addition to different paths, it needs to write chrome.manifest files to
+ * override chrome urls from the builtin tools.
+ */
 function SrcdirProvider() {}
 SrcdirProvider.prototype = {
   fileURI: function(path) {
     let file = new FileUtils.File(path);
     return Services.io.newFileURI(file).spec;
   },
 
   load: function() {
     let srcdir = Services.prefs.getComplexValue("devtools.loader.srcdir",
                                                 Ci.nsISupportsString);
     srcdir = OS.Path.normalize(srcdir.data.trim());
-    let devtoolsDir = OS.Path.join(srcdir, "browser", "devtools");
-    let toolkitDir = OS.Path.join(srcdir, "toolkit", "devtools");
+    let devtoolsDir = OS.Path.join(srcdir, "devtools");
+    let sharedDir = OS.Path.join(devtoolsDir, "shared");
     let modulesDir = OS.Path.join(srcdir, "toolkit", "modules");
-    let mainURI = this.fileURI(OS.Path.join(devtoolsDir, "main.js"));
-    let definitionsURI = this.fileURI(OS.Path.join(devtoolsDir, "definitions.js"));
     let devtoolsURI = this.fileURI(devtoolsDir);
-    let toolkitURI = this.fileURI(toolkitDir);
-    let serverURI = this.fileURI(OS.Path.join(toolkitDir, "server"));
-    let webideURI = this.fileURI(OS.Path.join(devtoolsDir, "webide", "modules"));
-    let webconsoleURI = this.fileURI(OS.Path.join(toolkitDir, "webconsole"));
-    let appActorURI = this.fileURI(OS.Path.join(toolkitDir, "apps", "app-actor-front.js"));
-    let cssLogicURI = this.fileURI(OS.Path.join(toolkitDir, "styleinspector", "css-logic"));
-    let cssColorURI = this.fileURI(OS.Path.join(toolkitDir, "css-color"));
-    let outputParserURI = this.fileURI(OS.Path.join(toolkitDir, "output-parser"));
-    let clientURI = this.fileURI(OS.Path.join(toolkitDir, "client"));
-    let prettyFastURI = this.fileURI(OS.Path.join(toolkitDir, "pretty-fast.js"));
-    let jsBeautifyURI = this.fileURI(OS.Path.join(toolkitDir, "jsbeautify", "beautify.js"));
-    let asyncUtilsURI = this.fileURI(OS.Path.join(toolkitDir, "async-utils.js"));
-    let contentObserverURI = this.fileURI(OS.Path.join(toolkitDir), "content-observer.js");
-    let gcliURI = this.fileURI(OS.Path.join(toolkitDir, "gcli", "source", "lib", "gcli"));
-    let projecteditorURI = this.fileURI(OS.Path.join(devtoolsDir, "projecteditor", "lib"));
-    let promiseURI = this.fileURI(OS.Path.join(modulesDir, "Promise-backend.js"));
-    let acornURI = this.fileURI(OS.Path.join(toolkitDir, "acorn"));
+    let gcliURI = this.fileURI(OS.Path.join(sharedDir,
+                                            "gcli", "source", "lib", "gcli"));
+    let promiseURI = this.fileURI(OS.Path.join(modulesDir,
+                                               "Promise-backend.js"));
+    let acornURI = this.fileURI(OS.Path.join(sharedDir, "acorn"));
     let acornWalkURI = OS.Path.join(acornURI, "walk.js");
-    let ternURI = OS.Path.join(toolkitDir, "tern");
-    let sourceMapURI = this.fileURI(OS.Path.join(toolkitDir, "sourcemap", "source-map.js"));
+    let ternURI = OS.Path.join(sharedDir, "tern");
+    let sourceMapURI = this.fileURI(OS.Path.join(sharedDir,
+                                                 "sourcemap", "source-map.js"));
     this.loader = new Loader.Loader({
       id: "fx-devtools",
       modules: loaderModules,
       paths: {
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "": "resource://gre/modules/commonjs/",
-        "main": mainURI,
-        "definitions": definitionsURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "devtools": devtoolsURI,
-        "devtools/toolkit": toolkitURI,
-        "devtools/server": serverURI,
-        "devtools/webide": webideURI,
-        "devtools/toolkit/webconsole": webconsoleURI,
-        "devtools/app-actor-front": appActorURI,
-        "devtools/styleinspector/css-logic": cssLogicURI,
-        "devtools/css-color": cssColorURI,
-        "devtools/output-parser": outputParserURI,
-        "devtools/client": clientURI,
-        "devtools/pretty-fast": prettyFastURI,
-        "devtools/jsbeautify": jsBeautifyURI,
-        "devtools/async-utils": asyncUtilsURI,
-        "devtools/content-observer": contentObserverURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "gcli": gcliURI,
-        "projecteditor": projecteditorURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "promise": promiseURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn": acornURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn/util/walk": acornWalkURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "tern": ternURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "source-map": sourceMapURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
       },
       globals: this.globals,
       invisibleToDebugger: this.invisibleToDebugger,
       sharedGlobal: true,
       sharedGlobalBlacklist: sharedGlobalBlacklist
     });
 
     return this._writeManifest(devtoolsDir).then(null, Cu.reportError);
@@ -439,17 +421,17 @@ DevToolsLoader.prototype = {
     var events = this.require("sdk/system/events");
     events.emit("startupcache-invalidate", {});
     events.emit("devtools-unloaded", {});
 
     this._provider.unload("reload");
     delete this._provider;
     delete this._mainid;
     this._chooseProvider();
-    this.main("main");
+    this.main("devtools/client/main");
   },
 
   /**
    * Sets whether the compartments loaded by this instance should be invisible
    * to the debugger.  Invisibility is needed for loaders that support debugging
    * of chrome code.  This is true of remote target environments, like Fennec or
    * B2G.  It is not the default case for desktop Firefox because we offer the
    * Browser Toolbox for chrome debugging there, which uses its own, separate
diff --git a/devtools/shared/tests/mochitest/test_loader_paths.html b/devtools/shared/tests/mochitest/test_loader_paths.html
--- a/devtools/shared/tests/mochitest/test_loader_paths.html
+++ b/devtools/shared/tests/mochitest/test_loader_paths.html
@@ -38,15 +38,15 @@
         Cu.import("resource://gre/modules/devtools/shared/Loader.jsm", {});
 
       let builtin = new BuiltinProvider();
       builtin.load();
       let srcdir = new SrcdirProvider();
       srcdir.load();
 
       is(builtin.loader.mapping.length,
-         srcdir.loader.mapping.length,
-         "The built-in loader should have the same number of mapping than testing.");
+         srcdir.loader.mapping.length + 2,
+         "The built-in loader has 2 additional mappings.");
 
       Services.prefs.clearUserPref(SRCDIR_PREF);
     </script>
   </body>
 </html>
diff --git a/devtools/shared/worker-loader.js b/devtools/shared/worker-loader.js
--- a/devtools/shared/worker-loader.js
+++ b/devtools/shared/worker-loader.js
@@ -489,17 +489,23 @@ this.worker = new WorkerDebuggerLoader({
   modules: {
     "Debugger": Debugger,
     "PromiseDebugging": PromiseDebugging,
     "Services": Object.create(null),
     "chrome": chrome,
     "xpcInspector": xpcInspector
   },
   paths: {
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
     "": "resource://gre/modules/commonjs/",
-    "devtools": "resource:///modules/devtools",
-    "devtools/server": "resource://gre/modules/devtools/server",
-    "devtools/toolkit": "resource://gre/modules/devtools",
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+    "devtools": "resource://gre/modules/devtools",
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+    "devtools/client": "resource:///modules/devtools/client",
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
     "promise": "resource://gre/modules/Promise-backend.js",
-    "source-map": "resource://gre/modules/devtools/source-map",
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+    "source-map": "resource://gre/modules/devtools/sourcemap/source-map.js",
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
     "xpcshell-test": "resource://test"
+    // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
   }
 });

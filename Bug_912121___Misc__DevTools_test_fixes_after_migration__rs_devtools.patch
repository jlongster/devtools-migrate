# HG changeset patch
# User J. Ryan Stinnett <jryans@gmail.com>
# Date 1442525553 18000
#      Thu Sep 17 16:32:33 2015 -0500
# Node ID a7af8c24f67920e6a765f7ec8a26992f20431cb8
# Parent  d51699996a010855f62e6b64db9a121ae002eed3
Bug 912121 - Misc. DevTools test fixes after migration. rs=devtools

diff --git a/devtools/client/commandline/test/browser_cmd_appcache_valid.js b/devtools/client/commandline/test/browser_cmd_appcache_valid.js
--- a/devtools/client/commandline/test/browser_cmd_appcache_valid.js
+++ b/devtools/client/commandline/test/browser_cmd_appcache_valid.js
@@ -106,17 +106,17 @@ function* spawnTest() {
       },
     },
 
     {
       setup: 'appcache validate ' + TEST_URI,
       check: {
         input:  'appcache validate ' + TEST_URI,
               // appcache validate http://sub1.test2.example.com/browser/devtools/client/commandline/test/browser_cmd_appcache_valid_index.html
-        markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
+        markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
         status: 'VALID',
         args: {
           uri: {
             value: TEST_URI
           },
         }
       },
       exec: {
@@ -156,17 +156,17 @@ function* spawnTest() {
       }
     },
 
     {
       setup: 'appcache viewentry --key ' + TEST_URI,
       check: {
         input:  'appcache viewentry --key ' + TEST_URI,
               // appcache viewentry --key http://sub1.test2.example.com/browser/devtools/client/commandline/test/browser_cmd_appcache_valid_index.html
-        markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
+        markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
         status: 'VALID',
         args: {}
       },
     },
   ]);
 
   yield helpers.closeToolbar(options);
   yield helpers.closeTab(options);
diff --git a/devtools/client/commandline/test/browser_cmd_inject.js b/devtools/client/commandline/test/browser_cmd_inject.js
--- a/devtools/client/commandline/test/browser_cmd_inject.js
+++ b/devtools/client/commandline/test/browser_cmd_inject.js
@@ -41,29 +41,29 @@ function test() {
             }
           }
         }
       },
       {
         setup:    'inject http://example.com/browser/devtools/client/commandline/test/browser_cmd_inject.js',
         check: {
           input:  'inject http://example.com/browser/devtools/client/commandline/test/browser_cmd_inject.js',
-          markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
-          hints:                                                                                            '',
+          markup: 'VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',
+          hints:                                                                                           '',
           status: 'VALID',
           args: {
             library: {
               value: function(library) {
                 is(library.type, 'url', 'inject type name');
                 is(library.url.origin, 'http://example.com', 'inject url hostname');
                 ok(library.url.path.indexOf('_inject.js') != -1, 'inject url path');
               },
               status: 'VALID'
             }
           }
         },
         exec: {
-          output: [ /http:\/\/example.com\/browser\/browser\/devtools\/commandline\/test\/browser_cmd_inject.js loaded/ ]
+          output: [ /http:\/\/example.com\/browser\/devtools\/client\/commandline\/test\/browser_cmd_inject.js loaded/ ]
         }
       }
     ]);
   }).then(finish, helpers.handleError);
 }
diff --git a/devtools/client/sourceeditor/test/browser_codemirror.js b/devtools/client/sourceeditor/test/browser_codemirror.js
--- a/devtools/client/sourceeditor/test/browser_codemirror.js
+++ b/devtools/client/sourceeditor/test/browser_codemirror.js
@@ -1,16 +1,15 @@
 /* vim: set ts=2 et sw=2 tw=80: */
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 
 "use strict";
 
-const HOST = 'mochi.test:8888';
-const URI  = "http://" + HOST + "/browser/devtools/client/sourceeditor/test/codemirror.html";
+const URI = "chrome://mochitests/content/browser/devtools/client/sourceeditor/test/codemirror.html";
 loadHelperScript("helper_codemirror_runner.js");
 
 function test() {
   requestLongerTimeout(3);
   waitForExplicitFinish();
 
   let tab = gBrowser.addTab();
   gBrowser.selectedTab = tab;
diff --git a/devtools/client/sourceeditor/test/browser_vimemacs.js b/devtools/client/sourceeditor/test/browser_vimemacs.js
--- a/devtools/client/sourceeditor/test/browser_vimemacs.js
+++ b/devtools/client/sourceeditor/test/browser_vimemacs.js
@@ -1,15 +1,14 @@
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 
 "use strict";
 
-const HOST = 'mochi.test:8888';
-const URI  = "http://" + HOST + "/browser/devtools/client/sourceeditor/test/vimemacs.html";
+const URI = "chrome://mochitests/content/browser/devtools/client/sourceeditor/test/vimemacs.html";
 loadHelperScript("helper_codemirror_runner.js");
 
 function test() {
   requestLongerTimeout(3);
   waitForExplicitFinish();
 
   let tab = gBrowser.addTab();
   gBrowser.selectedTab = tab;
diff --git a/devtools/client/webconsole/test/browser_webconsole_bug_632817.js b/devtools/client/webconsole/test/browser_webconsole_bug_632817.js
--- a/devtools/client/webconsole/test/browser_webconsole_bug_632817.js
+++ b/devtools/client/webconsole/test/browser_webconsole_bug_632817.js
@@ -1,18 +1,19 @@
 /* vim:set ts=2 sw=2 sts=2 et: */
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 
 // Tests that network log messages bring up the network panel.
 
 "use strict";
 
-const TEST_NETWORK_REQUEST_URI = "https://example.com/browser/browser/" +
-                                 "devtools/webconsole/test/test-network-request.html";
+const TEST_NETWORK_REQUEST_URI =
+  "https://example.com/browser/devtools/client/webconsole/test/" +
+  "test-network-request.html";
 
 const TEST_IMG = "http://example.com/browser/devtools/client/webconsole/" +
                  "test/test-image.png";
 
 const TEST_DATA_JSON_CONTENT =
   '{ id: "test JSON data", myArray: [ "foo", "bar", "baz", "biff" ] }';
 
 const TEST_URI = "data:text/html;charset=utf-8,Web Console network logging " +
diff --git a/devtools/client/webconsole/test/browser_webconsole_netlogging.js b/devtools/client/webconsole/test/browser_webconsole_netlogging.js
--- a/devtools/client/webconsole/test/browser_webconsole_netlogging.js
+++ b/devtools/client/webconsole/test/browser_webconsole_netlogging.js
@@ -12,18 +12,19 @@
 
 // Tests that network log messages bring up the network panel.
 
 "use strict";
 
 const TEST_URI = "data:text/html;charset=utf-8,Web Console network " +
                  "logging tests";
 
-const TEST_NETWORK_REQUEST_URI = "http://example.com/browser/browser/" +
-                 "devtools/webconsole/test/test-network-request.html";
+const TEST_NETWORK_REQUEST_URI =
+  "http://example.com/browser/devtools/client/webconsole/test/" +
+  "test-network-request.html";
 
 const TEST_IMG = "http://example.com/browser/devtools/client/webconsole/" +
                  "test/test-image.png";
 
 const TEST_DATA_JSON_CONTENT =
   '{ id: "test JSON data", myArray: [ "foo", "bar", "baz", "biff" ] }';
 
 var lastRequest = null;
diff --git a/devtools/client/webconsole/test/browser_webconsole_netlogging_reset_filter.js b/devtools/client/webconsole/test/browser_webconsole_netlogging_reset_filter.js
--- a/devtools/client/webconsole/test/browser_webconsole_netlogging_reset_filter.js
+++ b/devtools/client/webconsole/test/browser_webconsole_netlogging_reset_filter.js
@@ -2,18 +2,19 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 // Tests that network log messages bring up the network panel and select the
 // right request even if it was previously filtered off.
 
 "use strict";
 
-const TEST_FILE_URI = "http://example.com/browser/browser/" +
-                      "devtools/webconsole/test/test-network.html";
+const TEST_FILE_URI =
+  "http://example.com/browser/devtools/client/webconsole/test/" +
+  "test-network.html";
 const TEST_URI = "data:text/html;charset=utf8,<p>test file URI";
 
 let hud;
 
 let test = asyncTest(function* () {
   let requests = [];
   let { browser } = yield loadTab(TEST_URI);
 
diff --git a/devtools/client/webide/test/chrome.ini b/devtools/client/webide/test/chrome.ini
--- a/devtools/client/webide/test/chrome.ini
+++ b/devtools/client/webide/test/chrome.ini
@@ -43,19 +43,21 @@ support-files =
 [test_basic.html]
 [test_newapp.html]
 skip-if = buildapp == 'b2g' || (os == "mac" && (os_version == "10.8" || os_version == "10.10") && debug) || (os == "win" && os_version == "10.0") # Bug 1135315, bug 1197053
 [test_import.html]
 [test_duplicate_import.html]
 [test_runtime.html]
 [test_manifestUpdate.html]
 [test_addons.html]
+skip-if = true # Bug 1201392 - Update add-ons after migration
 [test_device_runtime.html]
 [test_device_permissions.html]
 [test_autoconnect_runtime.html]
 [test_autoselect_project.html]
 [test_telemetry.html]
+skip-if = true # Bug 1201392 - Update add-ons after migration
 [test_device_preferences.html]
 [test_device_settings.html]
 [test_fullscreenToolbox.html]
 [test_zoom.html]
 [test_build.html]
 [test_simulators.html]
diff --git a/devtools/client/webide/test/sidebars/chrome.ini b/devtools/client/webide/test/sidebars/chrome.ini
--- a/devtools/client/webide/test/sidebars/chrome.ini
+++ b/devtools/client/webide/test/sidebars/chrome.ini
@@ -9,16 +9,18 @@ support-files =
 
 [test_newapp.html]
 skip-if = buildapp == 'b2g' || (os == "mac" && (os_version == "10.8" || os_version == "10.10") && debug) || (os == "win" && os_version == "10.0") # Bug 1135315, bug 1197053
 [test_import.html]
 [test_duplicate_import.html]
 [test_runtime.html]
 [test_manifestUpdate.html]
 [test_addons.html]
+skip-if = true # Bug 1201392 - Update add-ons after migration
 [test_autoconnect_runtime.html]
 [test_autoselect_project.html]
 [test_fullscreenToolbox.html]
 [test_device_preferences.html]
 [test_device_permissions.html]
 [test_device_runtime.html]
 [test_device_settings.html]
 [test_telemetry.html]
+skip-if = true # Bug 1201392 - Update add-ons after migration
diff --git a/devtools/server/tests/mochitest/memprof-helpers.js b/devtools/server/tests/mochitest/memprof-helpers.js
--- a/devtools/server/tests/mochitest/memprof-helpers.js
+++ b/devtools/server/tests/mochitest/memprof-helpers.js
@@ -1,27 +1,26 @@
 let Cu = Components.utils;
 let Cc = Components.classes;
 let Ci = Components.interfaces;
 
-Cu.import("resource://gre/modules/Services.jsm");
+let { Services } = Cu.import("resource://gre/modules/Services.jsm", {});
 
 // Always log packets when running tests.
 Services.prefs.setBoolPref("devtools.debugger.log", true);
 SimpleTest.registerCleanupFunction(function() {
   Services.prefs.clearUserPref("devtools.debugger.log");
 });
 
-Cu.import("resource://gre/modules/devtools/shared/client/dbg-client.jsm");
-Cu.import("resource://gre/modules/devtools/server/dbg-server.jsm");
+let { Task } = Cu.import("resource://gre/modules/Task.jsm", {});
+let { require } =
+  Cu.import("resource://gre/modules/devtools/shared/Loader.jsm", {});
 
-Cu.import("resource://gre/modules/Task.jsm");
-Cu.import("resource://gre/modules/devtools/shared/Loader.jsm");
-let { require } = devtools;
-
+let { DebuggerClient } = require("devtools/shared/client/main");
+let { DebuggerServer } = require("devtools/server/main");
 let { MemprofFront } = require("devtools/server/actors/memprof");
 
 function startServerAndGetSelectedTabMemprof() {
   DebuggerServer.init();
   DebuggerServer.addBrowserActors();
   var client = new DebuggerClient(DebuggerServer.connectPipe());
 
   return new Promise((resolve, reject) => {
diff --git a/devtools/server/tests/mochitest/test_inspector-anonymous.html b/devtools/server/tests/mochitest/test_inspector-anonymous.html
--- a/devtools/server/tests/mochitest/test_inspector-anonymous.html
+++ b/devtools/server/tests/mochitest/test_inspector-anonymous.html
@@ -14,21 +14,20 @@ https://bugzilla.mozilla.org/show_bug.cg
 window.onload = function() {
   const Ci = Components.interfaces;
   const {InspectorFront} =
     require("devtools/server/actors/inspector");
   const {_documentWalker} =
     require("devtools/server/actors/inspector");
   const XUL_NS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
 
-  Services.prefs.setBoolPref("dom.webcomponents.enabled", true);
+  SpecialPowers.pushPrefEnv({"set": [
+    ["dom.webcomponents.enabled", true]
+  ]});
   SimpleTest.waitForExplicitFinish();
-  SimpleTest.registerCleanupFunction(() => {
-    Services.prefs.clearUserPref("dom.webcomponents.enabled");
-  });
 
   let gWalker = null;
   let gClient = null;
 
   addTest(function setup() {
     info ("Setting up inspector and walker actors.");
 
     let url = document.getElementById("inspectorContent").href;
diff --git a/devtools/shared/tests/mochitest/chrome.ini b/devtools/shared/tests/mochitest/chrome.ini
--- a/devtools/shared/tests/mochitest/chrome.ini
+++ b/devtools/shared/tests/mochitest/chrome.ini
@@ -1,7 +1,8 @@
 [DEFAULT]
 tags = devtools
 skip-if = buildapp == 'b2g' || os == 'android'
 
 [test_eventemitter_basic.html]
 [test_devtools_extensions.html]
+skip-if = os == 'linux' && debug # Bug 1205739
 [test_loader_paths.html]
